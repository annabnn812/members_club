{"id":"d0ed13913513f0156fd89dd56dda3a4e","_format":"hh-sol-build-info-1","solcVersion":"0.8.0","solcLongVersion":"0.8.0+commit.c7dfd78e","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/LoyaltyClub.sol":{"content":"// SPDX-License-Identifier: MIT\n\n//Goerli Testnet \n// ETH / USD 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\n\n// Optimism Mainnet\n// ETH / USD 0xb7B9A39CC63f856b90B364911CC324dC46aC1770\n\n//Optimism Goerli \n// ETH / USD 0x57241A37733983F97C4Ab06448F244A1E0Ca0ba8\n\n//BASE Goerli testnet\n// ETH / USD 0xcD2A119bD1F7DF95d706DE6F2057fDD45A0503E2\n\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract LoyaltyClub {\n    using SafeMath for uint256;\n\n    address public seller;\n    uint256 public amount;\n    address public buyer;\n    bool public isPaid;\n    AggregatorV3Interface internal dataFeed;\n\n    constructor(address _seller) {\n        seller = _seller;\n        dataFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\n    }\n\n    function pay(uint256 _amount) public payable {\n        require(msg.value == _amount, \"Payment amount should be equal to the total amount\");\n        amount = _amount;\n        buyer = msg.sender;\n        isPaid = true;\n    }\n\n   function releasePayment() public {\n    require(isPaid, \"Payment has not been made yet\");\n    (, int256 price, , , ) = dataFeed.latestRoundData();\n    require(price > 0, \"Invalid price\"); // Ensure the price is valid and greater than zero\n\n    // Convert USD amount to ETH using the latest ETH/USD price\n    uint256 totalAmount = amount * uint256(price) / 1e8; // Divide by 1e8 to adjust decimals\n\n    require(address(this).balance >= totalAmount, \"Insufficient contract balance\");\n\n    // Transfer the amount to the seller\n    payable(seller).transfer(totalAmount);\n}\n\n    function getPrice() public view returns (uint256) {\n        (, int256 price, , , ) = dataFeed.latestRoundData();\n        require(price > 0, \"Invalid price\"); // Ensure the price is valid and greater than zero\n        return uint256(price);\n    }\n\n    function calculateTotalAmount() public view returns (uint256) {\n        return amount.mul(getPrice());\n    }\n\n    function checkIfPaid() public view returns (bool) {\n        return isPaid;\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[45]},"id":46,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":45,"linearizedBaseContracts":[45],"name":"AggregatorV3Interface","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":6,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"110:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6,"src":"136:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:0"},"scope":45,"src":"93:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":11,"implemented":false,"kind":"function","modifiers":[],"name":"description","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"167:2:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":11,"src":"193:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:0"},"scope":45,"src":"147:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"version","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"228:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":16,"src":"254:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:0"},"scope":45,"src":"212:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":31,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"_roundId","nodeType":"VariableDeclaration","scope":31,"src":"289:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":17,"name":"uint80","nodeType":"ElementaryTypeName","src":"289:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"288:17:0"},"returnParameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"roundId","nodeType":"VariableDeclaration","scope":31,"src":"348:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":20,"name":"uint80","nodeType":"ElementaryTypeName","src":"348:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"answer","nodeType":"VariableDeclaration","scope":31,"src":"370:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":22,"name":"int256","nodeType":"ElementaryTypeName","src":"370:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"startedAt","nodeType":"VariableDeclaration","scope":31,"src":"391:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"391:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"updatedAt","nodeType":"VariableDeclaration","scope":31,"src":"416:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"answeredInRound","nodeType":"VariableDeclaration","scope":31,"src":"441:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":28,"name":"uint80","nodeType":"ElementaryTypeName","src":"441:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"340:129:0"},"scope":45,"src":"267:203:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":44,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"498:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"roundId","nodeType":"VariableDeclaration","scope":44,"src":"543:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":33,"name":"uint80","nodeType":"ElementaryTypeName","src":"543:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"answer","nodeType":"VariableDeclaration","scope":44,"src":"565:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":35,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"startedAt","nodeType":"VariableDeclaration","scope":44,"src":"586:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"updatedAt","nodeType":"VariableDeclaration","scope":44,"src":"611:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"answeredInRound","nodeType":"VariableDeclaration","scope":44,"src":"636:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":41,"name":"uint80","nodeType":"ElementaryTypeName","src":"636:6:0","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"535:129:0"},"scope":45,"src":"474:191:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":46,"src":"57:610:0"}],"src":"32:636:0"},"id":0},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[357]},"id":358,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":47,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"285:196:1","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":357,"linearizedBaseContracts":[357],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":79,"nodeType":"Block","src":"717:140:1","statements":[{"id":78,"nodeType":"UncheckedBlock","src":"727:124:1","statements":[{"assignments":[61],"declarations":[{"constant":false,"id":61,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":78,"src":"751:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":65,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"763:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":63,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"767:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":66,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"786:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":67,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"790:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":73,"nodeType":"IfStatement","src":"782:28:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":69,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":71,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":59,"id":72,"nodeType":"Return","src":"793:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":74,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":75,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"838:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":76,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":59,"id":77,"nodeType":"Return","src":"824:16:1"}]}]},"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"505:131:1","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":80,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":80,"src":"657:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":80,"src":"668:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:1"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":80,"src":"702:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":58,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":80,"src":"708:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:1"},"scope":357,"src":"641:216:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":107,"nodeType":"Block","src":"1078:113:1","statements":[{"id":106,"nodeType":"UncheckedBlock","src":"1088:97:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":92,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"1116:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":93,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"1120:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":99,"nodeType":"IfStatement","src":"1112:28:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":96,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":97,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":91,"id":98,"nodeType":"Return","src":"1123:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":101,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"1168:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":102,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"1172:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":91,"id":105,"nodeType":"Return","src":"1154:20:1"}]}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"863:134:1","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":108,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":108,"src":"1018:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":108,"src":"1029:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:1"},"returnParameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":108,"src":"1063:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":87,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":108,"src":"1069:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:1"},"scope":357,"src":"1002:189:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":149,"nodeType":"Block","src":"1415:417:1","statements":[{"id":148,"nodeType":"UncheckedBlock","src":"1425:401:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":120,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1683:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":127,"nodeType":"IfStatement","src":"1679:28:1","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":119,"id":126,"nodeType":"Return","src":"1691:16:1"}},{"assignments":[129],"declarations":[{"constant":false,"id":129,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":148,"src":"1721:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":133,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":130,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1733:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":131,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"1737:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":134,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"1756:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":135,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1760:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":137,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"1765:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":143,"nodeType":"IfStatement","src":"1752:33:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":119,"id":142,"nodeType":"Return","src":"1768:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":145,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"1813:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":146,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":119,"id":147,"nodeType":"Return","src":"1799:16:1"}]}]},"documentation":{"id":109,"nodeType":"StructuredDocumentation","src":"1197:137:1","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":150,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nodeType":"FunctionDefinition","parameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":150,"src":"1355:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":113,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":150,"src":"1366:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:1"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":116,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":150,"src":"1400:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":115,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":118,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":150,"src":"1406:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:1"},"scope":357,"src":"1339:493:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":177,"nodeType":"Block","src":"2057:114:1","statements":[{"id":176,"nodeType":"UncheckedBlock","src":"2067:98:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":162,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2095:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":169,"nodeType":"IfStatement","src":"2091:29:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":161,"id":168,"nodeType":"Return","src":"2103:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":171,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"2148:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":172,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2152:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":161,"id":175,"nodeType":"Return","src":"2134:20:1"}]}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"1838:138:1","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":178,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":178,"src":"1997:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":178,"src":"2008:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:1"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":178,"src":"2042:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":157,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":178,"src":"2048:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":159,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:1"},"scope":357,"src":"1981:190:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":205,"nodeType":"Block","src":"2406:114:1","statements":[{"id":204,"nodeType":"UncheckedBlock","src":"2416:98:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":190,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"2444:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":197,"nodeType":"IfStatement","src":"2440:29:1","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":189,"id":196,"nodeType":"Return","src":"2452:17:1"}},{"expression":{"components":[{"hexValue":"74727565","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":199,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"2497:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":200,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"2501:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":189,"id":203,"nodeType":"Return","src":"2483:20:1"}]}]},"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"2177:148:1","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":206,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nodeType":"FunctionDefinition","parameters":{"id":184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":206,"src":"2346:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":180,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":183,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":206,"src":"2357:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":182,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:1"},"returnParameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":206,"src":"2391:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":185,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":206,"src":"2397:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:1"},"scope":357,"src":"2330:190:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":220,"nodeType":"Block","src":"2822:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":216,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"2839:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":217,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"2843:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":215,"id":219,"nodeType":"Return","src":"2832:12:1"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"2526:224:1","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":221,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":221,"src":"2768:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":208,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":221,"src":"2779:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":221,"src":"2813:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:1"},"scope":357,"src":"2755:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":235,"nodeType":"Block","src":"3189:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"3206:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":232,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"3210:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":230,"id":234,"nodeType":"Return","src":"3199:12:1"}]},"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"2857:260:1","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":236,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":236,"src":"3135:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":236,"src":"3146:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:1"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":236,"src":"3180:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:1"},"scope":357,"src":"3122:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"3532:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":246,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"3549:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":247,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"3553:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":245,"id":249,"nodeType":"Return","src":"3542:12:1"}]},"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"3224:236:1","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":251,"src":"3478:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":238,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":251,"src":"3489:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:1"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":251,"src":"3523:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:1"},"scope":357,"src":"3465:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":265,"nodeType":"Block","src":"3917:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":261,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"3934:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":262,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"3938:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":260,"id":264,"nodeType":"Return","src":"3927:12:1"}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3567:278:1","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":266,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":266,"src":"3863:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":266,"src":"3874:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:1"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":266,"src":"3908:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:1"},"scope":357,"src":"3850:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":280,"nodeType":"Block","src":"4466:29:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":276,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"4483:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":277,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"4487:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":275,"id":279,"nodeType":"Return","src":"4476:12:1"}]},"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"3952:442:1","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":281,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":281,"src":"4412:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":281,"src":"4423:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":270,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:1"},"returnParameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":281,"src":"4457:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:1"},"scope":357,"src":"4399:96:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":305,"nodeType":"Block","src":"5054:106:1","statements":[{"id":304,"nodeType":"UncheckedBlock","src":"5064:90:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":294,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"5096:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5101:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5096:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":297,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"5104:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5088:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5088:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":299,"nodeType":"ExpressionStatement","src":"5088:29:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":300,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5138:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":301,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"5142:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5138:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":292,"id":303,"nodeType":"Return","src":"5131:12:1"}]}]},"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"4501:453:1","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":306,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":306,"src":"4972:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":306,"src":"4983:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"4983:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":306,"src":"4994:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":287,"name":"string","nodeType":"ElementaryTypeName","src":"4994:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:50:1"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":306,"src":"5045:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"5045:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5044:9:1"},"scope":357,"src":"4959:201:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":330,"nodeType":"Block","src":"5739:105:1","statements":[{"id":329,"nodeType":"UncheckedBlock","src":"5749:89:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":319,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"5781:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5785:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5781:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":322,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"5788:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":318,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5773:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5773:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"5773:28:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":325,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5822:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":326,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"5826:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5822:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":317,"id":328,"nodeType":"Return","src":"5815:12:1"}]}]},"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"5166:473:1","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":331,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":331,"src":"5657:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5657:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":331,"src":"5668:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"5668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":331,"src":"5679:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":312,"name":"string","nodeType":"ElementaryTypeName","src":"5679:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5656:50:1"},"returnParameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":331,"src":"5730:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"5730:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5729:9:1"},"scope":357,"src":"5644:200:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":355,"nodeType":"Block","src":"6585:105:1","statements":[{"id":354,"nodeType":"UncheckedBlock","src":"6595:89:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"6627:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6627:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":347,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"6634:12:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":343,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6619:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6619:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":349,"nodeType":"ExpressionStatement","src":"6619:28:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":350,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"6668:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":351,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"6672:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6668:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":342,"id":353,"nodeType":"Return","src":"6661:12:1"}]}]},"documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"5850:635:1","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":356,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":356,"src":"6503:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"6503:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":356,"src":"6514:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"6514:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":356,"src":"6525:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":337,"name":"string","nodeType":"ElementaryTypeName","src":"6525:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6502:50:1"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":356,"src":"6576:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6575:9:1"},"scope":357,"src":"6490:200:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":358,"src":"482:6210:1"}],"src":"107:6586:1"},"id":1},"contracts/LoyaltyClub.sol":{"ast":{"absolutePath":"contracts/LoyaltyClub.sol","exportedSymbols":{"AggregatorV3Interface":[45],"LoyaltyClub":[515],"SafeMath":[357]},"id":516,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":359,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"340:23:2"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":360,"nodeType":"ImportDirective","scope":516,"sourceUnit":46,"src":"365:76:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":361,"nodeType":"ImportDirective","scope":516,"sourceUnit":358,"src":"442:57:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":515,"linearizedBaseContracts":[515],"name":"LoyaltyClub","nodeType":"ContractDefinition","nodes":[{"id":364,"libraryName":{"id":362,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":357,"src":"534:8:2"},"nodeType":"UsingForDirective","src":"528:27:2","typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"08551a53","id":366,"mutability":"mutable","name":"seller","nodeType":"VariableDeclaration","scope":515,"src":"561:21:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"561:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"aa8c217c","id":368,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":515,"src":"588:21:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":367,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"7150d8ae","id":370,"mutability":"mutable","name":"buyer","nodeType":"VariableDeclaration","scope":515,"src":"615:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"615:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"209ebc08","id":372,"mutability":"mutable","name":"isPaid","nodeType":"VariableDeclaration","scope":515,"src":"641:18:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":371,"name":"bool","nodeType":"ElementaryTypeName","src":"641:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"id":375,"mutability":"mutable","name":"dataFeed","nodeType":"VariableDeclaration","scope":515,"src":"665:39:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"},"typeName":{"id":374,"nodeType":"UserDefinedTypeName","pathNode":{"id":373,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":45,"src":"665:21:2"},"referencedDeclaration":45,"src":"665:21:2","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"},{"body":{"id":390,"nodeType":"Block","src":"740:119:2","statements":[{"expression":{"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":380,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"750:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":381,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"759:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"750:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":383,"nodeType":"ExpressionStatement","src":"750:16:2"},{"expression":{"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":384,"name":"dataFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"776:8:2","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"307844346133333836303537384465363144424162446338424664623938464437343266413730323865","id":386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"809:42:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":385,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"787:21:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$45_$","typeString":"type(contract AggregatorV3Interface)"}},"id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"787:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"src":"776:76:2","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":389,"nodeType":"ExpressionStatement","src":"776:76:2"}]},"id":391,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"_seller","nodeType":"VariableDeclaration","scope":391,"src":"723:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"723:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"722:17:2"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[],"src":"740:0:2"},"scope":515,"src":"711:148:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":417,"nodeType":"Block","src":"910:177:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":397,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"928:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"928:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":399,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"941:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"928:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e7420616d6f756e742073686f756c6420626520657175616c20746f2074686520746f74616c20616d6f756e74","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"950:52:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ad7159023faca7908a29a3be0a82d215a569e8a2a8e979f63aac619c842f721","typeString":"literal_string \"Payment amount should be equal to the total amount\""},"value":"Payment amount should be equal to the total amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ad7159023faca7908a29a3be0a82d215a569e8a2a8e979f63aac619c842f721","typeString":"literal_string \"Payment amount should be equal to the total amount\""}],"id":396,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"920:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"920:83:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":403,"nodeType":"ExpressionStatement","src":"920:83:2"},{"expression":{"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":404,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1013:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":405,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"1022:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1013:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":407,"nodeType":"ExpressionStatement","src":"1013:16:2"},{"expression":{"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":408,"name":"buyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"1039:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":409,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1047:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1047:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1039:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":412,"nodeType":"ExpressionStatement","src":"1039:18:2"},{"expression":{"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":413,"name":"isPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"1067:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1076:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1067:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":416,"nodeType":"ExpressionStatement","src":"1067:13:2"}]},"functionSelector":"c290d691","id":418,"implemented":true,"kind":"function","modifiers":[],"name":"pay","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"_amount","nodeType":"VariableDeclaration","scope":418,"src":"878:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"877:17:2"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[],"src":"910:0:2"},"scope":515,"src":"865:222:2","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":469,"nodeType":"Block","src":"1125:534:2","statements":[{"expression":{"arguments":[{"id":422,"name":"isPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"1139:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e7420686173206e6f74206265656e206d61646520796574","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1147:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_319881dd6acf454025d37733466b2048ae084d2fea6fa22bb434fbffb1000c19","typeString":"literal_string \"Payment has not been made yet\""},"value":"Payment has not been made yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_319881dd6acf454025d37733466b2048ae084d2fea6fa22bb434fbffb1000c19","typeString":"literal_string \"Payment has not been made yet\""}],"id":421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1131:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1131:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":425,"nodeType":"ExpressionStatement","src":"1131:48:2"},{"assignments":[null,427,null,null,null],"declarations":[null,{"constant":false,"id":427,"mutability":"mutable","name":"price","nodeType":"VariableDeclaration","scope":469,"src":"1188:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":426,"name":"int256","nodeType":"ElementaryTypeName","src":"1188:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":431,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":428,"name":"dataFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"1210:8:2","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1210:24:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1210:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"1185:51:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":433,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"1250:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1258:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1250:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207072696365","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1261:15:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","typeString":"literal_string \"Invalid price\""},"value":"Invalid price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","typeString":"literal_string \"Invalid price\""}],"id":432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1242:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1242:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":438,"nodeType":"ExpressionStatement","src":"1242:35:2"},{"assignments":[440],"declarations":[{"constant":false,"id":440,"mutability":"mutable","name":"totalAmount","nodeType":"VariableDeclaration","scope":469,"src":"1399:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"1399:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":449,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":441,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1421:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":444,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"1438:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1430:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":442,"name":"uint256","nodeType":"ElementaryTypeName","src":"1430:7:2","typeDescriptions":{}}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1430:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1421:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"316538","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1447:3:2","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"value":"1e8"},"src":"1421:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1399:51:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":453,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1509:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_LoyaltyClub_$515","typeString":"contract LoyaltyClub"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LoyaltyClub_$515","typeString":"contract LoyaltyClub"}],"id":452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1501:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"1501:7:2","typeDescriptions":{}}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1501:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"1501:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":456,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"1526:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1501:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420636f6e74726163742062616c616e6365","id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1539:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749","typeString":"literal_string \"Insufficient contract balance\""},"value":"Insufficient contract balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749","typeString":"literal_string \"Insufficient contract balance\""}],"id":450,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1493:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1493:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":460,"nodeType":"ExpressionStatement","src":"1493:78:2"},{"expression":{"arguments":[{"id":466,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"1644:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":463,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"1627:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1619:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"1619:8:2","stateMutability":"payable","typeDescriptions":{}}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1619:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"1619:24:2","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1619:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":468,"nodeType":"ExpressionStatement","src":"1619:37:2"}]},"functionSelector":"d116c8c4","id":470,"implemented":true,"kind":"function","modifiers":[],"name":"releasePayment","nodeType":"FunctionDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[],"src":"1115:2:2"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[],"src":"1125:0:2"},"scope":515,"src":"1092:567:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":493,"nodeType":"Block","src":"1715:195:2","statements":[{"assignments":[null,476,null,null,null],"declarations":[null,{"constant":false,"id":476,"mutability":"mutable","name":"price","nodeType":"VariableDeclaration","scope":493,"src":"1728:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":475,"name":"int256","nodeType":"ElementaryTypeName","src":"1728:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":480,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":477,"name":"dataFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"1750:8:2","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$45","typeString":"contract AggregatorV3Interface"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1750:24:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1750:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"1725:51:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":482,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"1794:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1802:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1794:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207072696365","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1805:15:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","typeString":"literal_string \"Invalid price\""},"value":"Invalid price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","typeString":"literal_string \"Invalid price\""}],"id":481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1786:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1786:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":487,"nodeType":"ExpressionStatement","src":"1786:35:2"},{"expression":{"arguments":[{"id":490,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"1897:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1889:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1889:7:2","typeDescriptions":{}}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1889:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":474,"id":492,"nodeType":"Return","src":"1882:21:2"}]},"functionSelector":"98d5fdca","id":494,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nodeType":"FunctionDefinition","parameters":{"id":471,"nodeType":"ParameterList","parameters":[],"src":"1682:2:2"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":494,"src":"1706:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":472,"name":"uint256","nodeType":"ElementaryTypeName","src":"1706:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1705:9:2"},"scope":515,"src":"1665:245:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":505,"nodeType":"Block","src":"1978:46:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":501,"name":"getPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"2006:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2006:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":499,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1995:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":251,"src":"1995:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1995:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":498,"id":504,"nodeType":"Return","src":"1988:29:2"}]},"functionSelector":"2064f50e","id":506,"implemented":true,"kind":"function","modifiers":[],"name":"calculateTotalAmount","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"1945:2:2"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":506,"src":"1969:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint256","nodeType":"ElementaryTypeName","src":"1969:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1968:9:2"},"scope":515,"src":"1916:108:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":513,"nodeType":"Block","src":"2080:30:2","statements":[{"expression":{"id":511,"name":"isPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2097:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":510,"id":512,"nodeType":"Return","src":"2090:13:2"}]},"functionSelector":"ead10f31","id":514,"implemented":true,"kind":"function","modifiers":[],"name":"checkIfPaid","nodeType":"FunctionDefinition","parameters":{"id":507,"nodeType":"ParameterList","parameters":[],"src":"2050:2:2"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":514,"src":"2074:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":508,"name":"bool","nodeType":"ElementaryTypeName","src":"2074:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2073:6:2"},"scope":515,"src":"2030:80:2","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":516,"src":"501:1611:2"}],"src":"340:1772:2"},"id":2}},"contracts":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d16c075e4244b5c4d211072b0f81894ae6a83ed7ed34a407633545db5101031364736f6c63430008000033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH13 0x75E4244B5C4D211072B0F8189 0x4A 0xE6 0xA8 RETURNDATACOPY 0xD7 0xED CALLVALUE LOG4 SMOD PUSH4 0x3545DB51 ADD SUB SGT PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"482:6210:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:1;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d16c075e4244b5c4d211072b0f81894ae6a83ed7ed34a407633545db5101031364736f6c63430008000033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH13 0x75E4244B5C4D211072B0F8189 0x4A 0xE6 0xA8 RETURNDATACOPY 0xD7 0xED CALLVALUE LOG4 SMOD PUSH4 0x3545DB51 ADD SUB SGT PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"482:6210:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}"}},"contracts/LoyaltyClub.sol":{"LoyaltyClub":{"abi":[{"inputs":[{"internalType":"address","name":"_seller","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"amount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buyer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"calculateTotalAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"checkIfPaid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isPaid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"pay","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"releasePayment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"seller","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:326:3","statements":[{"nodeType":"YulBlock","src":"6:3:3","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:229:3","statements":[{"body":{"nodeType":"YulBlock","src":"141:26:3","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"150:6:3"},{"name":"value0","nodeType":"YulIdentifier","src":"158:6:3"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:3"},"nodeType":"YulFunctionCall","src":"143:22:3"},"nodeType":"YulExpressionStatement","src":"143:22:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:3"},"nodeType":"YulFunctionCall","src":"112:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:3"},"nodeType":"YulFunctionCall","src":"108:32:3"},"nodeType":"YulIf","src":"105:2:3"},{"nodeType":"YulVariableDeclaration","src":"176:29:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"195:9:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"189:5:3"},"nodeType":"YulFunctionCall","src":"189:16:3"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"180:5:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"268:26:3","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"277:6:3"},{"name":"value0","nodeType":"YulIdentifier","src":"285:6:3"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"270:6:3"},"nodeType":"YulFunctionCall","src":"270:22:3"},"nodeType":"YulExpressionStatement","src":"270:22:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"227:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"238:5:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"253:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"258:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"249:3:3"},"nodeType":"YulFunctionCall","src":"249:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"262:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"245:3:3"},"nodeType":"YulFunctionCall","src":"245:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"234:3:3"},"nodeType":"YulFunctionCall","src":"234:31:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"224:2:3"},"nodeType":"YulFunctionCall","src":"224:42:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"217:6:3"},"nodeType":"YulFunctionCall","src":"217:50:3"},"nodeType":"YulIf","src":"214:2:3"},{"nodeType":"YulAssignment","src":"303:15:3","value":{"name":"value","nodeType":"YulIdentifier","src":"313:5:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"303:6:3"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:3","type":""}],"src":"14:310:3"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}","id":3,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516106f63803806106f683398101604081905261002f91610071565b600080546001600160a01b039092166001600160a01b03199283161790556003805490911673d4a33860578de61dbabdc8bfdb98fd742fa7028e17905561009f565b600060208284031215610082578081fd5b81516001600160a01b0381168114610098578182fd5b9392505050565b610648806100ae6000396000f3fe6080604052600436106100865760003560e01c806398d5fdca1161005957806398d5fdca1461010f578063aa8c217c14610124578063c290d69114610139578063d116c8c41461014e578063ead10f311461016357610086565b806308551a531461008b5780632064f50e146100b6578063209ebc08146100d85780637150d8ae146100fa575b600080fd5b34801561009757600080fd5b506100a0610178565b6040516100ad91906104b8565b60405180910390f35b3480156100c257600080fd5b506100cb610187565b6040516100ad91906105be565b3480156100e457600080fd5b506100ed6101a2565b6040516100ad91906104cc565b34801561010657600080fd5b506100a06101b2565b34801561011b57600080fd5b506100cb6101c1565b34801561013057600080fd5b506100cb610279565b61014c610147366004610451565b61027f565b005b34801561015a57600080fd5b5061014c6102c4565b34801561016f57600080fd5b506100ed61040f565b6000546001600160a01b031681565b600061019d6101946101c1565b6001549061041f565b905090565b600254600160a01b900460ff1681565b6002546001600160a01b031681565b600080600360009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561021257600080fd5b505afa158015610226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024a9190610469565b5050509150506000811361019d5760405162461bcd60e51b815260040161027090610560565b60405180910390fd5b60015481565b80341461029e5760405162461bcd60e51b81526004016102709061050e565b6001556002805460ff60a01b196001600160a01b0319909116331716600160a01b179055565b600254600160a01b900460ff166102ed5760405162461bcd60e51b8152600401610270906104d7565b60035460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a0929190829003018186803b15801561033257600080fd5b505afa158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190610469565b505050915050600081136103905760405162461bcd60e51b815260040161027090610560565b60006305f5e100826001546103a591906105e7565b6103af91906105c7565b9050804710156103d15760405162461bcd60e51b815260040161027090610587565b600080546040516001600160a01b039091169183156108fc02918491818181858888f1935050505015801561040a573d6000803e3d6000fd5b505050565b600254600160a01b900460ff1690565b600061042b82846105e7565b9392505050565b805169ffffffffffffffffffff8116811461044c57600080fd5b919050565b600060208284031215610462578081fd5b5035919050565b600080600080600060a08688031215610480578081fd5b61048986610432565b94506020860151935060408601519250606086015191506104ac60808701610432565b90509295509295909350565b6001600160a01b0391909116815260200190565b901515815260200190565b6020808252601d908201527f5061796d656e7420686173206e6f74206265656e206d61646520796574000000604082015260600190565b60208082526032908201527f5061796d656e7420616d6f756e742073686f756c6420626520657175616c20746040820152711bc81d1a19481d1bdd185b08185b5bdd5b9d60721b606082015260800190565b6020808252600d908201526c496e76616c696420707269636560981b604082015260600190565b6020808252601d908201527f496e73756666696369656e7420636f6e74726163742062616c616e6365000000604082015260600190565b90815260200190565b6000826105e257634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561060d57634e487b7160e01b81526011600452602481fd5b50029056fea2646970667358221220331fd241d400f96803523419aef2cf7f4ceb351252323e50260759fcae14fb5964736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x6F6 CODESIZE SUB DUP1 PUSH2 0x6F6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x71 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0xD4A33860578DE61DBABDC8BFDB98FD742FA7028E OR SWAP1 SSTORE PUSH2 0x9F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x82 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x98 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x648 DUP1 PUSH2 0xAE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98D5FDCA GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xAA8C217C EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xC290D691 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xD116C8C4 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xEAD10F31 EQ PUSH2 0x163 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x8551A53 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x2064F50E EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x209EBC08 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x7150D8AE EQ PUSH2 0xFA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x5BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x4CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x1B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x1C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x279 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x451 JUMP JUMPDEST PUSH2 0x27F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x2C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D PUSH2 0x194 PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH2 0x41F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x226 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x469 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SGT PUSH2 0x19D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270 SWAP1 PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST DUP1 CALLVALUE EQ PUSH2 0x29E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270 SWAP1 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND CALLER OR AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270 SWAP1 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x346 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x469 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SGT PUSH2 0x390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270 SWAP1 PUSH2 0x560 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x5F5E100 DUP3 PUSH1 0x1 SLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x5C7 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270 SWAP1 PUSH2 0x587 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x40A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B DUP3 DUP5 PUSH2 0x5E7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x462 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x480 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x489 DUP7 PUSH2 0x432 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x4AC PUSH1 0x80 DUP8 ADD PUSH2 0x432 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x5061796D656E7420686173206E6F74206265656E206D61646520796574000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x5061796D656E7420616D6F756E742073686F756C6420626520657175616C2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x1BC81D1A19481D1BDD185B08185B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x496E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x60D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0x1F 0xD2 COINBASE 0xD4 STOP 0xF9 PUSH9 0x3523419AEF2CF7F4C 0xEB CALLDATALOAD SLT MSTORE ORIGIN RETURNDATACOPY POP 0x26 SMOD MSIZE 0xFC 0xAE EQ 0xFB MSIZE PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"501:1611:2:-:0;;;711:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;750:6;:16;;-1:-1:-1;;;;;750:16:2;;;-1:-1:-1;;;;;;750:16:2;;;;;;776:8;:76;;;;;809:42;776:76;;;501:1611;;14:310:3;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:3;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:3:o;:::-;501:1611:2;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3447:3","statements":[{"nodeType":"YulBlock","src":"6:3:3","statements":[]},{"body":{"nodeType":"YulBlock","src":"75:120:3","statements":[{"nodeType":"YulAssignment","src":"85:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"100:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"94:5:3"},"nodeType":"YulFunctionCall","src":"94:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"85:5:3"}]},{"body":{"nodeType":"YulBlock","src":"173:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"182:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"185:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"175:6:3"},"nodeType":"YulFunctionCall","src":"175:12:3"},"nodeType":"YulExpressionStatement","src":"175:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"129:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"140:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"147:22:3","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"136:3:3"},"nodeType":"YulFunctionCall","src":"136:34:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"126:2:3"},"nodeType":"YulFunctionCall","src":"126:45:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"119:6:3"},"nodeType":"YulFunctionCall","src":"119:53:3"},"nodeType":"YulIf","src":"116:2:3"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"54:6:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"65:5:3","type":""}],"src":"14:181:3"},{"body":{"nodeType":"YulBlock","src":"270:120:3","statements":[{"body":{"nodeType":"YulBlock","src":"316:26:3","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"325:6:3"},{"name":"value0","nodeType":"YulIdentifier","src":"333:6:3"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"318:6:3"},"nodeType":"YulFunctionCall","src":"318:22:3"},"nodeType":"YulExpressionStatement","src":"318:22:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"291:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"300:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"287:3:3"},"nodeType":"YulFunctionCall","src":"287:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"312:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"283:3:3"},"nodeType":"YulFunctionCall","src":"283:32:3"},"nodeType":"YulIf","src":"280:2:3"},{"nodeType":"YulAssignment","src":"351:33:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"374:9:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"361:12:3"},"nodeType":"YulFunctionCall","src":"361:23:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"351:6:3"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"236:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"247:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"259:6:3","type":""}],"src":"200:190:3"},{"body":{"nodeType":"YulBlock","src":"541:341:3","statements":[{"body":{"nodeType":"YulBlock","src":"588:26:3","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"597:6:3"},{"name":"value4","nodeType":"YulIdentifier","src":"605:6:3"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"590:6:3"},"nodeType":"YulFunctionCall","src":"590:22:3"},"nodeType":"YulExpressionStatement","src":"590:22:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"562:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"571:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"558:3:3"},"nodeType":"YulFunctionCall","src":"558:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"583:3:3","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"554:3:3"},"nodeType":"YulFunctionCall","src":"554:33:3"},"nodeType":"YulIf","src":"551:2:3"},{"nodeType":"YulAssignment","src":"623:51:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"664:9:3"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"633:30:3"},"nodeType":"YulFunctionCall","src":"633:41:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"623:6:3"}]},{"nodeType":"YulAssignment","src":"683:35:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"703:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"714:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"699:3:3"},"nodeType":"YulFunctionCall","src":"699:18:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"693:5:3"},"nodeType":"YulFunctionCall","src":"693:25:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"683:6:3"}]},{"nodeType":"YulAssignment","src":"727:35:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"747:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"758:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"743:3:3"},"nodeType":"YulFunctionCall","src":"743:18:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"737:5:3"},"nodeType":"YulFunctionCall","src":"737:25:3"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"727:6:3"}]},{"nodeType":"YulAssignment","src":"771:35:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"791:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"802:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:3"},"nodeType":"YulFunctionCall","src":"787:18:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"781:5:3"},"nodeType":"YulFunctionCall","src":"781:25:3"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"771:6:3"}]},{"nodeType":"YulAssignment","src":"815:61:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"860:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"871:3:3","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"856:3:3"},"nodeType":"YulFunctionCall","src":"856:19:3"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"825:30:3"},"nodeType":"YulFunctionCall","src":"825:51:3"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"815:6:3"}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"475:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"486:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"498:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"506:6:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"514:6:3","type":""},{"name":"value3","nodeType":"YulTypedName","src":"522:6:3","type":""},{"name":"value4","nodeType":"YulTypedName","src":"530:6:3","type":""}],"src":"395:487:3"},{"body":{"nodeType":"YulBlock","src":"988:102:3","statements":[{"nodeType":"YulAssignment","src":"998:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1010:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1021:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1006:3:3"},"nodeType":"YulFunctionCall","src":"1006:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"998:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:3"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1055:6:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1071:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1076:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1067:3:3"},"nodeType":"YulFunctionCall","src":"1067:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"1080:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1063:3:3"},"nodeType":"YulFunctionCall","src":"1063:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1051:3:3"},"nodeType":"YulFunctionCall","src":"1051:32:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1033:6:3"},"nodeType":"YulFunctionCall","src":"1033:51:3"},"nodeType":"YulExpressionStatement","src":"1033:51:3"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"957:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"968:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"979:4:3","type":""}],"src":"887:203:3"},{"body":{"nodeType":"YulBlock","src":"1190:92:3","statements":[{"nodeType":"YulAssignment","src":"1200:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1212:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1223:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1208:3:3"},"nodeType":"YulFunctionCall","src":"1208:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1200:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1242:9:3"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1267:6:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1260:6:3"},"nodeType":"YulFunctionCall","src":"1260:14:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1253:6:3"},"nodeType":"YulFunctionCall","src":"1253:22:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1235:6:3"},"nodeType":"YulFunctionCall","src":"1235:41:3"},"nodeType":"YulExpressionStatement","src":"1235:41:3"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1159:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1170:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1181:4:3","type":""}],"src":"1095:187:3"},{"body":{"nodeType":"YulBlock","src":"1461:179:3","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1478:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1489:2:3","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1471:6:3"},"nodeType":"YulFunctionCall","src":"1471:21:3"},"nodeType":"YulExpressionStatement","src":"1471:21:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1523:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1508:3:3"},"nodeType":"YulFunctionCall","src":"1508:18:3"},{"kind":"number","nodeType":"YulLiteral","src":"1528:2:3","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1501:6:3"},"nodeType":"YulFunctionCall","src":"1501:30:3"},"nodeType":"YulExpressionStatement","src":"1501:30:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1551:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1562:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1547:3:3"},"nodeType":"YulFunctionCall","src":"1547:18:3"},{"kind":"string","nodeType":"YulLiteral","src":"1567:31:3","type":"","value":"Payment has not been made yet"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1540:6:3"},"nodeType":"YulFunctionCall","src":"1540:59:3"},"nodeType":"YulExpressionStatement","src":"1540:59:3"},{"nodeType":"YulAssignment","src":"1608:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1620:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1631:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1616:3:3"},"nodeType":"YulFunctionCall","src":"1616:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1608:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_319881dd6acf454025d37733466b2048ae084d2fea6fa22bb434fbffb1000c19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1438:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1452:4:3","type":""}],"src":"1287:353:3"},{"body":{"nodeType":"YulBlock","src":"1819:240:3","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1836:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1847:2:3","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1829:6:3"},"nodeType":"YulFunctionCall","src":"1829:21:3"},"nodeType":"YulExpressionStatement","src":"1829:21:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1870:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1881:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1866:3:3"},"nodeType":"YulFunctionCall","src":"1866:18:3"},{"kind":"number","nodeType":"YulLiteral","src":"1886:2:3","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1859:6:3"},"nodeType":"YulFunctionCall","src":"1859:30:3"},"nodeType":"YulExpressionStatement","src":"1859:30:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1909:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1920:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:3"},"nodeType":"YulFunctionCall","src":"1905:18:3"},{"kind":"string","nodeType":"YulLiteral","src":"1925:34:3","type":"","value":"Payment amount should be equal t"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1898:6:3"},"nodeType":"YulFunctionCall","src":"1898:62:3"},"nodeType":"YulExpressionStatement","src":"1898:62:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1980:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1991:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1976:3:3"},"nodeType":"YulFunctionCall","src":"1976:18:3"},{"kind":"string","nodeType":"YulLiteral","src":"1996:20:3","type":"","value":"o the total amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1969:6:3"},"nodeType":"YulFunctionCall","src":"1969:48:3"},"nodeType":"YulExpressionStatement","src":"1969:48:3"},{"nodeType":"YulAssignment","src":"2026:27:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2038:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2049:3:3","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2034:3:3"},"nodeType":"YulFunctionCall","src":"2034:19:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2026:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_6ad7159023faca7908a29a3be0a82d215a569e8a2a8e979f63aac619c842f721__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1796:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1810:4:3","type":""}],"src":"1645:414:3"},{"body":{"nodeType":"YulBlock","src":"2238:163:3","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2255:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2266:2:3","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2248:6:3"},"nodeType":"YulFunctionCall","src":"2248:21:3"},"nodeType":"YulExpressionStatement","src":"2248:21:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2289:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2300:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2285:3:3"},"nodeType":"YulFunctionCall","src":"2285:18:3"},{"kind":"number","nodeType":"YulLiteral","src":"2305:2:3","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2278:6:3"},"nodeType":"YulFunctionCall","src":"2278:30:3"},"nodeType":"YulExpressionStatement","src":"2278:30:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2328:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2339:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2324:3:3"},"nodeType":"YulFunctionCall","src":"2324:18:3"},{"kind":"string","nodeType":"YulLiteral","src":"2344:15:3","type":"","value":"Invalid price"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2317:6:3"},"nodeType":"YulFunctionCall","src":"2317:43:3"},"nodeType":"YulExpressionStatement","src":"2317:43:3"},{"nodeType":"YulAssignment","src":"2369:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2381:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2392:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2377:3:3"},"nodeType":"YulFunctionCall","src":"2377:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2369:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2215:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2229:4:3","type":""}],"src":"2064:337:3"},{"body":{"nodeType":"YulBlock","src":"2580:179:3","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2597:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2608:2:3","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2590:6:3"},"nodeType":"YulFunctionCall","src":"2590:21:3"},"nodeType":"YulExpressionStatement","src":"2590:21:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2631:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2642:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2627:3:3"},"nodeType":"YulFunctionCall","src":"2627:18:3"},{"kind":"number","nodeType":"YulLiteral","src":"2647:2:3","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2620:6:3"},"nodeType":"YulFunctionCall","src":"2620:30:3"},"nodeType":"YulExpressionStatement","src":"2620:30:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2670:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2681:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2666:3:3"},"nodeType":"YulFunctionCall","src":"2666:18:3"},{"kind":"string","nodeType":"YulLiteral","src":"2686:31:3","type":"","value":"Insufficient contract balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2659:6:3"},"nodeType":"YulFunctionCall","src":"2659:59:3"},"nodeType":"YulExpressionStatement","src":"2659:59:3"},{"nodeType":"YulAssignment","src":"2727:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2739:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2750:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2735:3:3"},"nodeType":"YulFunctionCall","src":"2735:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2727:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2557:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2571:4:3","type":""}],"src":"2406:353:3"},{"body":{"nodeType":"YulBlock","src":"2865:76:3","statements":[{"nodeType":"YulAssignment","src":"2875:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2887:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2898:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2883:3:3"},"nodeType":"YulFunctionCall","src":"2883:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2875:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2917:9:3"},{"name":"value0","nodeType":"YulIdentifier","src":"2928:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2910:6:3"},"nodeType":"YulFunctionCall","src":"2910:25:3"},"nodeType":"YulExpressionStatement","src":"2910:25:3"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2834:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2845:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2856:4:3","type":""}],"src":"2764:177:3"},{"body":{"nodeType":"YulBlock","src":"2992:171:3","statements":[{"body":{"nodeType":"YulBlock","src":"3023:111:3","statements":[{"expression":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"3044:1:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3051:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3056:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3047:3:3"},"nodeType":"YulFunctionCall","src":"3047:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3037:6:3"},"nodeType":"YulFunctionCall","src":"3037:31:3"},"nodeType":"YulExpressionStatement","src":"3037:31:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3088:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3091:4:3","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3081:6:3"},"nodeType":"YulFunctionCall","src":"3081:15:3"},"nodeType":"YulExpressionStatement","src":"3081:15:3"},{"expression":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"3116:1:3"},{"kind":"number","nodeType":"YulLiteral","src":"3119:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3109:6:3"},"nodeType":"YulFunctionCall","src":"3109:15:3"},"nodeType":"YulExpressionStatement","src":"3109:15:3"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3012:1:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3005:6:3"},"nodeType":"YulFunctionCall","src":"3005:9:3"},"nodeType":"YulIf","src":"3002:2:3"},{"nodeType":"YulAssignment","src":"3143:14:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3152:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"3155:1:3"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3148:3:3"},"nodeType":"YulFunctionCall","src":"3148:9:3"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3143:1:3"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2977:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"2980:1:3","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"2986:1:3","type":""}],"src":"2946:217:3"},{"body":{"nodeType":"YulBlock","src":"3220:225:3","statements":[{"body":{"nodeType":"YulBlock","src":"3287:123:3","statements":[{"expression":{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"3308:7:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3321:3:3","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3326:10:3","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3317:3:3"},"nodeType":"YulFunctionCall","src":"3317:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3301:6:3"},"nodeType":"YulFunctionCall","src":"3301:37:3"},"nodeType":"YulExpressionStatement","src":"3301:37:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3358:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3361:4:3","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3351:6:3"},"nodeType":"YulFunctionCall","src":"3351:15:3"},"nodeType":"YulExpressionStatement","src":"3351:15:3"},{"expression":{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"3386:7:3"},{"kind":"number","nodeType":"YulLiteral","src":"3395:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3379:6:3"},"nodeType":"YulFunctionCall","src":"3379:21:3"},"nodeType":"YulExpressionStatement","src":"3379:21:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3251:1:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3244:6:3"},"nodeType":"YulFunctionCall","src":"3244:9:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3237:6:3"},"nodeType":"YulFunctionCall","src":"3237:17:3"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3259:1:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3270:1:3","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3266:3:3"},"nodeType":"YulFunctionCall","src":"3266:6:3"},{"name":"x","nodeType":"YulIdentifier","src":"3274:1:3"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3262:3:3"},"nodeType":"YulFunctionCall","src":"3262:14:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3256:2:3"},"nodeType":"YulFunctionCall","src":"3256:21:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3233:3:3"},"nodeType":"YulFunctionCall","src":"3233:45:3"},"nodeType":"YulIf","src":"3230:2:3"},{"nodeType":"YulAssignment","src":"3419:20:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3434:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"3437:1:3"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3430:3:3"},"nodeType":"YulFunctionCall","src":"3430:9:3"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"3419:7:3"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3199:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"3202:1:3","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"3208:7:3","type":""}],"src":"3168:277:3"}]},"contents":"{\n    { }\n    function abi_decode_t_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_t_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_t_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_319881dd6acf454025d37733466b2048ae084d2fea6fa22bb434fbffb1000c19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Payment has not been made yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6ad7159023faca7908a29a3be0a82d215a569e8a2a8e979f63aac619c842f721__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Payment amount should be equal t\")\n        mstore(add(headStart, 96), \"o the total amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Invalid price\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Insufficient contract balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(product, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(product, 0x24)\n        }\n        product := mul(x, y)\n    }\n}","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100865760003560e01c806398d5fdca1161005957806398d5fdca1461010f578063aa8c217c14610124578063c290d69114610139578063d116c8c41461014e578063ead10f311461016357610086565b806308551a531461008b5780632064f50e146100b6578063209ebc08146100d85780637150d8ae146100fa575b600080fd5b34801561009757600080fd5b506100a0610178565b6040516100ad91906104b8565b60405180910390f35b3480156100c257600080fd5b506100cb610187565b6040516100ad91906105be565b3480156100e457600080fd5b506100ed6101a2565b6040516100ad91906104cc565b34801561010657600080fd5b506100a06101b2565b34801561011b57600080fd5b506100cb6101c1565b34801561013057600080fd5b506100cb610279565b61014c610147366004610451565b61027f565b005b34801561015a57600080fd5b5061014c6102c4565b34801561016f57600080fd5b506100ed61040f565b6000546001600160a01b031681565b600061019d6101946101c1565b6001549061041f565b905090565b600254600160a01b900460ff1681565b6002546001600160a01b031681565b600080600360009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561021257600080fd5b505afa158015610226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024a9190610469565b5050509150506000811361019d5760405162461bcd60e51b815260040161027090610560565b60405180910390fd5b60015481565b80341461029e5760405162461bcd60e51b81526004016102709061050e565b6001556002805460ff60a01b196001600160a01b0319909116331716600160a01b179055565b600254600160a01b900460ff166102ed5760405162461bcd60e51b8152600401610270906104d7565b60035460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a0929190829003018186803b15801561033257600080fd5b505afa158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190610469565b505050915050600081136103905760405162461bcd60e51b815260040161027090610560565b60006305f5e100826001546103a591906105e7565b6103af91906105c7565b9050804710156103d15760405162461bcd60e51b815260040161027090610587565b600080546040516001600160a01b039091169183156108fc02918491818181858888f1935050505015801561040a573d6000803e3d6000fd5b505050565b600254600160a01b900460ff1690565b600061042b82846105e7565b9392505050565b805169ffffffffffffffffffff8116811461044c57600080fd5b919050565b600060208284031215610462578081fd5b5035919050565b600080600080600060a08688031215610480578081fd5b61048986610432565b94506020860151935060408601519250606086015191506104ac60808701610432565b90509295509295909350565b6001600160a01b0391909116815260200190565b901515815260200190565b6020808252601d908201527f5061796d656e7420686173206e6f74206265656e206d61646520796574000000604082015260600190565b60208082526032908201527f5061796d656e7420616d6f756e742073686f756c6420626520657175616c20746040820152711bc81d1a19481d1bdd185b08185b5bdd5b9d60721b606082015260800190565b6020808252600d908201526c496e76616c696420707269636560981b604082015260600190565b6020808252601d908201527f496e73756666696369656e7420636f6e74726163742062616c616e6365000000604082015260600190565b90815260200190565b6000826105e257634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561060d57634e487b7160e01b81526011600452602481fd5b50029056fea2646970667358221220331fd241d400f96803523419aef2cf7f4ceb351252323e50260759fcae14fb5964736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98D5FDCA GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xAA8C217C EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xC290D691 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xD116C8C4 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xEAD10F31 EQ PUSH2 0x163 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x8551A53 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x2064F50E EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x209EBC08 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x7150D8AE EQ PUSH2 0xFA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x5BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x4CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x1B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x1C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x279 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x451 JUMP JUMPDEST PUSH2 0x27F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x2C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D PUSH2 0x194 PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH2 0x41F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x226 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x469 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SGT PUSH2 0x19D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270 SWAP1 PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST DUP1 CALLVALUE EQ PUSH2 0x29E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270 SWAP1 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND CALLER OR AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270 SWAP1 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x346 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x469 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SGT PUSH2 0x390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270 SWAP1 PUSH2 0x560 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x5F5E100 DUP3 PUSH1 0x1 SLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x5C7 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270 SWAP1 PUSH2 0x587 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x40A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42B DUP3 DUP5 PUSH2 0x5E7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x462 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x480 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x489 DUP7 PUSH2 0x432 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x4AC PUSH1 0x80 DUP8 ADD PUSH2 0x432 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x5061796D656E7420686173206E6F74206265656E206D61646520796574000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x5061796D656E7420616D6F756E742073686F756C6420626520657175616C2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x1BC81D1A19481D1BDD185B08185B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x496E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5E2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x60D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0x1F 0xD2 COINBASE 0xD4 STOP 0xF9 PUSH9 0x3523419AEF2CF7F4C 0xEB CALLDATALOAD SLT MSTORE ORIGIN RETURNDATACOPY POP 0x26 SMOD MSIZE 0xFC 0xAE EQ 0xFB MSIZE PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ","sourceMap":"501:1611:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;561:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1916:108;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;641:18::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;615:20::-;;;;;;;;;;;;;:::i;1665:245::-;;;;;;;;;;;;;:::i;588:21::-;;;;;;;;;;;;;:::i;865:222::-;;;;;;:::i;:::-;;:::i;:::-;;1092:567;;;;;;;;;;;;;:::i;2030:80::-;;;;;;;;;;;;;:::i;561:21::-;;;-1:-1:-1;;;;;561:21:2;;:::o;1916:108::-;1969:7;1995:22;2006:10;:8;:10::i;:::-;1995:6;;;:10;:22::i;:::-;1988:29;;1916:108;:::o;641:18::-;;;-1:-1:-1;;;641:18:2;;;;;:::o;615:20::-;;;-1:-1:-1;;;;;615:20:2;;:::o;1665:245::-;1706:7;1728:12;1750:8;;;;;;;;;-1:-1:-1;;;;;1750:8:2;-1:-1:-1;;;;;1750:24:2;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1725:51;;;;;;1802:1;1794:5;:9;1786:35;;;;-1:-1:-1;;;1786:35:2;;;;;;;:::i;:::-;;;;;;;;588:21;;;;:::o;865:222::-;941:7;928:9;:20;920:83;;;;-1:-1:-1;;;920:83:2;;;;;;;:::i;:::-;1013:6;:16;1039:5;:18;;-1:-1:-1;;;;;;;;;;1039:18:2;;;1047:10;1039:18;1067:13;-1:-1:-1;;;1067:13:2;;;865:222::o;1092:567::-;1139:6;;-1:-1:-1;;;1139:6:2;;;;1131:48;;;;-1:-1:-1;;;1131:48:2;;;;;;;:::i;:::-;1210:8;;:26;;;-1:-1:-1;;;1210:26:2;;;;1188:12;;-1:-1:-1;;;;;1210:8:2;;:24;;:26;;;;;;;;;;;;;;:8;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1185:51;;;;;;1258:1;1250:5;:9;1242:35;;;;-1:-1:-1;;;1242:35:2;;;;;;;:::i;:::-;1399:19;1447:3;1438:5;1421:6;;:23;;;;:::i;:::-;:29;;;;:::i;:::-;1399:51;;1526:11;1501:21;:36;;1493:78;;;;-1:-1:-1;;;1493:78:2;;;;;;;:::i;:::-;1627:6;;;1619:37;;-1:-1:-1;;;;;1627:6:2;;;;1619:37;;;;;1644:11;;1619:37;1627:6;1619:37;1644:11;1627:6;1619:37;;;;;;;;;;;;;;;;;;;;;1092:567;;:::o;2030:80::-;2097:6;;-1:-1:-1;;;2097:6:2;;;;;2030:80::o;3465:96:1:-;3523:7;3549:5;3553:1;3549;:5;:::i;:::-;3542:12;3465:96;-1:-1:-1;;;3465:96:1:o;14:181:3:-;94:13;;147:22;136:34;;126:45;;116:2;;185:1;182;175:12;116:2;75:120;;;:::o;200:190::-;;312:2;300:9;291:7;287:23;283:32;280:2;;;333:6;325;318:22;280:2;-1:-1:-1;361:23:3;;270:120;-1:-1:-1;270:120:3:o;395:487::-;;;;;;583:3;571:9;562:7;558:23;554:33;551:2;;;605:6;597;590:22;551:2;633:41;664:9;633:41;:::i;:::-;623:51;;714:2;703:9;699:18;693:25;683:35;;758:2;747:9;743:18;737:25;727:35;;802:2;791:9;787:18;781:25;771:35;;825:51;871:3;860:9;856:19;825:51;:::i;:::-;815:61;;541:341;;;;;;;;:::o;887:203::-;-1:-1:-1;;;;;1051:32:3;;;;1033:51;;1021:2;1006:18;;988:102::o;1095:187::-;1260:14;;1253:22;1235:41;;1223:2;1208:18;;1190:92::o;1287:353::-;1489:2;1471:21;;;1528:2;1508:18;;;1501:30;1567:31;1562:2;1547:18;;1540:59;1631:2;1616:18;;1461:179::o;1645:414::-;1847:2;1829:21;;;1886:2;1866:18;;;1859:30;1925:34;1920:2;1905:18;;1898:62;-1:-1:-1;;;1991:2:3;1976:18;;1969:48;2049:3;2034:19;;1819:240::o;2064:337::-;2266:2;2248:21;;;2305:2;2285:18;;;2278:30;-1:-1:-1;;;2339:2:3;2324:18;;2317:43;2392:2;2377:18;;2238:163::o;2406:353::-;2608:2;2590:21;;;2647:2;2627:18;;;2620:30;2686:31;2681:2;2666:18;;2659:59;2750:2;2735:18;;2580:179::o;2764:177::-;2910:25;;;2898:2;2883:18;;2865:76::o;2946:217::-;;3012:1;3002:2;;-1:-1:-1;;;3037:31:3;;3091:4;3088:1;3081:15;3119:4;3044:1;3109:15;3002:2;-1:-1:-1;3148:9:3;;2992:171::o;3168:277::-;;3274:1;3270;3266:6;3262:14;3259:1;3256:21;3251:1;3244:9;3237:17;3233:45;3230:2;;;-1:-1:-1;;;3301:37:3;;3361:4;3358:1;3351:15;3395:4;3308:7;3379:21;3230:2;-1:-1:-1;3430:9:3;;3220:225::o"},"methodIdentifiers":{"amount()":"aa8c217c","buyer()":"7150d8ae","calculateTotalAmount()":"2064f50e","checkIfPaid()":"ead10f31","getPrice()":"98d5fdca","isPaid()":"209ebc08","pay(uint256)":"c290d691","releasePayment()":"d116c8c4","seller()":"08551a53"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateTotalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkIfPaid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasePayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LoyaltyClub.sol\":\"LoyaltyClub\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/LoyaltyClub.sol\":{\"keccak256\":\"0xb35a19b2a37a861fe4ce144564e894ea4e5a0eb4b95c7a9ed2228ae63bbb901f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://735c111c9827433886a48228d971203dbf8f454d50abe57c591c0b834f187298\",\"dweb:/ipfs/QmXszuTKn3VV4W8Gp41KL72XjMQmX5NqYHdjJRHF4DUAEC\"]}},\"version\":1}"}}}}}